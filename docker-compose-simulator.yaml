name: haru-simulator

services:
  haru-simulator:
    image: haru/haru-simulator:ros1
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "/bin/bash", "-c", "roslaunch haru_unity unity_app_launcher.launch && tail -f /dev/null" ]
    environment:
      - DISPLAY=${DISPLAY}
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    network_mode: host
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    runtime: nvidia

  publisher:
    image: haru/haru-simulator:ros1
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "rostopic", "pub", "/hello", "std_msgs/String", "data: 'Hello from Docker'", "-r", "1" ]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    network_mode: host
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix

  listener:
    image: haru/haru-simulator:ros1
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "rostopic", "echo", "/hello" ]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    network_mode: host
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix

  rqt:
    image: haru/haru-simulator:ros1
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "rqt" ]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=${ROS_MASTER_URI}
    network_mode: host
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
