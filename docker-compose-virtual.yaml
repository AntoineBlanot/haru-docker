name: haru-virtual

networks:
  rosnet:
    name: rosnet
    driver: bridge

services:
  ros-master:
    image: haru/haru-os:ros1
    entrypoint: ["/entrypoint.sh"]
    command: ["roscore"]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=http://ros-master:11311
      - ROS_HOSTNAME=ros-master
    networks:
      - rosnet
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    healthcheck:
      test: ["CMD-SHELL", "rosnode list || exit 0"]
      interval: 5s
      retries: 5
      start_period: 10s
      timeout: 5s

  haru-simulator:
    image: haru/haru-simulator:ros1
    entrypoint: ["/entrypoint.sh"]
    command: [ "/bin/bash", "-c", "roslaunch haru_unity unity_app_launcher.launch && tail -f /dev/null" ]
    environment:
      - DISPLAY=${DISPLAY}
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES}
      - ROS_MASTER_URI=http://ros-master:11311
      - ROS_HOSTNAME=haru-simulator
    network_mode: rosnet
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    runtime: nvidia
    depends_on:
      ros-master:
        condition: service_healthy

  publisher:
    image: haru/haru-os:ros1
    entrypoint: ["/entrypoint.sh"]
    command: ["rostopic", "pub", "/hello", "std_msgs/String", "data: 'Hello from Docker'", "-r", "1"]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=http://ros-master:11311
      - ROS_HOSTNAME=publisher
    network_mode: rosnet
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      ros-master:
        condition: service_healthy
  
  listener:
    image: haru/haru-os:ros1
    entrypoint: ["/entrypoint.sh"]
    command: ["rostopic", "echo", "/hello"]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=http://ros-master:11311
      - ROS_HOSTNAME=listener
    network_mode: rosnet
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      ros-master:
        condition: service_healthy

  rqt:
    image: haru/haru-os:ros1
    entrypoint: ["/entrypoint.sh"]
    command: ["rqt"]
    environment:
      - DISPLAY=${DISPLAY}
      - ROS_MASTER_URI=http://ros-master:11311
      - ROS_HOSTNAME=rqt
    networks:
      - rosnet
    devices:
      - /dev/snd
      - /dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      ros-master:
        condition: service_healthy
